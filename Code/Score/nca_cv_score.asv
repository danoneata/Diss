function cv_score = nca_cv_score(A, X, c, X_cv, c_cv, approx)
  
  if ~exist('approx','var'),
    approx = 0;
  end

  cv_score = 0;

  [D N] = size(X);
  N_cv  = size(X_cv,2);
  A = reshape(A,[],D);
  
  AX = A*X;
  AX_cv = A*X_cv;
  
  if approx == 1,
    k = 50;
    
    [idxs_k dist_all] = knnsearch(AX', AX_cv', 'k', k);
    idxs_k = idxs_k'; dist_all = dist_all';

    K = exp(-dist_all);
    Ksum = sum(K, 1);
    K = bsxfun(@rdivide, K, Ksum);
    K = max(K, eps);
    
    cv_score = 0;
    
    for i=1:n,
      ii = idxs(i);
      idxs_neigh = c(ii) == c(idxs_k(:,i));
      p = sum(K(idxs_neigh,i));

      % Update function value:
      f = cv_score - p;
    end
  else
    for i=1:N_cv,
      % Compute denominator---sum of the distances between the current 
      % point x_i and all the other points x_k, k~=i:
      dist_all = exp( -sum( bsxfun(@minus,AX_cv(:,i),AX).^2, 1 ) );
      sum_dist_all = sum(dist_all);

      % Compute numerator---sum of the distances between the current 
      % point x_i and its neighbours x_j:
      dist_neigh = dist_all(c==c_cv(i));
      sum_dist_neigh = sum(dist_neigh);

      p_i = sum_dist_neigh / sum_dist_all;

      % Update function value:
      cv_score = cv_score + max(p_i,eps);
    end
  end

end